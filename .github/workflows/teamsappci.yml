# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Teams App CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  APPLICATION_ID: 'c390e840-ab18-11ea-a32b-9bb004570882'
  PACKAGE_NAME: 'myteamsapp'
  VERSION: '0.0.1'
  HOSTNAME: 'myteamsapp.azurewebsites.net'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - run: npm ci
    - run: npm run build --if-present
    - run: gulp manifest
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: "Teams App" # optional
        # A file, directory or wildcard pattern that describes what to upload
        path: "./package"
    - name: Zip package folder
      uses: TonyBogdanov/zip@1.0
      with:
        args: zip -qq -r ./dist.zip ./dist
    - name: Upload a Build Artifact - App
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: App # optional
        # A file, directory or wildcard pattern that describes what to upload
        path: ./dist.zip
    
  deploy:
    
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
        with:
          # Artifact name
          name: "Teams App" # optional
          # Destination path
          path: ./package # optional
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
        with:
          # Artifact name
          name: "App" # optional
          # Destination path
          path: ./package # optional
      - run: ls -ls
      - name: Decompress dist folder
        uses: TonyBogdanov/zip@1.0
        with:
          args: unzip -qq ./package/dist.zip -d ./dist
